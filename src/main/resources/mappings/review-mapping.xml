<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappings.review-mapping">
	<!-- 리뷰 등록 -->
	<insert id="insertReview">
		INSERT INTO review(rseq, id, bseq, rating, content)
		VALUES(review_seq.nextval, #{id}, #{bseq}, #{rating}, #{content})
	</insert>
	
	<!-- 리뷰 조회 -->
	<select id="listReview" resultType="review">
		SELECT * FROM review
		WHERE bseq=#{bseq} ORDER BY indate DESC
	</select>
	
	<!-- 리뷰 삭제는 실제 review 테이블이 대상 -->
	<delete id="deleteReview" parameterType="int">
		DELETE FROM review
		WHERE rseq=#{rseq}
	</delete>
	
	<!-- TODO: 별점 평균 업데이트 -->  
	<select id="ReviewAvg">
		SELECT r.avg 
		FROM (SELECT bseq, rseq, avg(rating) AS avg FROM review GROUP BY bseq) r WEHRE r.bseq=#{bseq})
		where bseq=#{bseq}
	</select>
	
	<!-- TODO: 조회한 상품의 리뷰 총 갯수 -->
	<select id="countReviewList" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM review
		 WHERE title LIKE '%' || #{title}|| '%'
	</select>
	
	<!-- TODO: 페이지별 상품목록 조회 -->
	<select id="reviewPaging" parameterType="hashMap" resultType="review">
	<![CDATA[
	SELECT bseq, rseq, id, rating, content, indate
      FROM (
      		SELECT row_number() over(ORDER BY bseq) rn, bseq, rseq, id, rating, content, indate
		      FROM review
		      WHERE bseq={bseq}) 
			)
     WHERE rn <= #{criteria.pageNum} * #{criteria.rowsPerPage} 
       AND rn > (#{criteria.pageNum}-1) * #{criteria.rowsPerPage}
    ]]>
	</select>
</mapper>